version: "3.5"
services:
  mongo-container:
    container_name: mongo-container
    build:
      dockerfile: DockerFile
      context: ./database
    volumes:
      - ./database/data:/data/db
    ports:
      - "27017:27017"
    networks:
      - red-servidores
    restart: on-failure

  servidor1:
    container_name: service1
    build:
      dockerfile: DockerFile
      context: ./servidor1
    ports:
      - "3001:3001"
    depends_on:
      - mongo-container
    links:
      - mongo-container
    networks:
        ipv4_address: 10.5.0.2
    restart: on-failure

  servidor2:
    container_name: service2
    build:
      dockerfile: DockerFile
      context: ./servidor2
    ports:
      - "3002:3002"
    depends_on:
      - mongo-container
    links:
      - mongo-container
      networks:
      ipv4_address: 10.5.0.3
    restart: on-failure

  servidor3:
    container_name: service3
    build:
      dockerfile: DockerFile
      context: ./servidor3
    ports:
      - "3003:3003"
    depends_on:
      - mongo-container
    links:
      - mongo-container
    networks:
      ipv4_address: 10.5.0.4
    restart: on-failure

    nginx:
    image: nginx:latest
    volumes:
      - .load-balancer/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - servidor1
      - servidor2
      - servidor3
    ports:
      - "4000:4000"
    networks:
      - red-servidores


networks:
  default:
    name: red-servidores
    driver: bridge
    ipam:
     config:
       - subnet: 10.5.0.0/16
         gateway: 10.5.0.1